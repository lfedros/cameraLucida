function [X, Y, Z, soma, parent, id, nodeNum] = loadSWC(db, tracer, treeType)

if nargin < 3
    treeType = 'all';
    fileTag = '_%d_tracing.swc';
else
    switch treeType
        case 'all'
            fileTag = '_%d_tracing.swc';
        case 'dendrites'
            fileTag = '_%d_tracing_dendrites.swc';
        case 'basal'
            fileTag = '_%d_tracing_basal.swc';
        case 'apical'
            fileTag = '_%d_tracing_apical.swc';         
    end
end

if ispc
    
    dir = fullfile(db.root, db.animal);
    file = fullfile(dir, [db.animal(end-4:end), sprintf(fileTag, db.starterID)]);
else
    dir = fullfile(db.root, db.animal);
    file = fullfile(dir, [db.animal(end-4:end), sprintf(fileTag, db.starterID)]);
end

fileID = fopen(file, 'r');

% if the swc file was exported from neuTube the header reads
% '# Generated by NeuTu (https://github.com/janelia-flyem/NeuTu)'
% if the swc was generated in Fiji the header reads
% '# Exported from "Simple Neurite Tracer" version 2.0.2'

switch tracer
    case 'neuTube'
        head = textscan(fileID, '%s', 5);
    case 'Fiji'
        head = textscan(fileID, '%s', 8);      
end


px = textscan(fileID, '%d %d %f %f %f %f %d');
fclose(fileID);


[fovx, fovy] = zoom2fov(db.zoom);

sX = fovx/512; % px size in x
sY = fovy/512; % px size in y
sZ = db.zStep; % px size in z


X = px{3}*sX;
Y = px{4}*sY;
Z = px{5}*sZ;
parent = px{7};
id = px{2};
nodeNum = px{1};

% dA = cameraLucida.swcAdjacencyMat(nodeNum, parent);
% figure;
% gplot(dA, [X,Y])

soma = find(parent == -1);
soma = [X(soma), Y(soma), Z(soma)] ;

X = X- soma(1);
Y = Y - soma(2);
Z = Z- soma(3);

end